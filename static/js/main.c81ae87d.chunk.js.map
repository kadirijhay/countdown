{"version":3,"sources":["component/Header.js","component/Footer.js","component/Countdown.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Footer","href","Countdown","state","daysDone","daysLeft","_this2","this","setInterval","currentDate","Date","getTime","daysDifference","daysSoFar","Math","ceil","difference","days","floor","hours","minutes","seconds","setState","day","daysToGo","hoursToGo","minutesToGo","secondsToGo","styles","color","className","style","React","Component","App","component_Header","component_Countdown","component_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c81ae87d.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <p>#100DaysOfCode <br />COUNTDOWN TIMER</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n            <span>Code written by <a href=\"https://twitter.com/kadirijhay\">Jude Kadiri</a></span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\n\r\nclass Countdown extends React.Component {\r\n    state = {\r\n        daysDone: \"\",\r\n        daysLeft: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            const currentDate = new Date().getTime()\r\n    \r\n            const dayStarted = new Date(\"May 20, 2019, 00:00\").getTime()\r\n            const daysDifference = currentDate - dayStarted\r\n    \r\n            const daysSoFar = Math.ceil(daysDifference / (1000 * 60 * 60 * 24))\r\n\r\n            const countDownTo = new Date(\"August 27, 2019, 23:59\").getTime()\r\n            const difference = countDownTo - currentDate        \r\n            const days = Math.floor(difference / (1000 * 60 * 60 * 24))\r\n            const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n            const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60))\r\n            const seconds = Math.floor((difference % (1000 * 60)) / 1000)\r\n\r\n            this.setState({\r\n                day: daysSoFar,\r\n                daysToGo: days,\r\n                hoursToGo: hours,\r\n                minutesToGo: minutes,\r\n                secondsToGo: seconds\r\n            })\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    render() {\r\n        const styles = {\r\n            color: \"red\"\r\n        }\r\n\r\n        return(\r\n            <div className=\"countdown\">\r\n                <h1>DAY <span style={{color:\"#003E73\"}}>{this.state.day}</span></h1>\r\n                <h2>Challenge Started: May 20th, 2019</h2>\r\n                {\r\n                    this.state.day === 100 ? \r\n                    <h1 style={styles}>Challenge has ended!</h1> :\r\n                    <div className=\"timer\">\r\n                        <h3>You have:</h3>\r\n                        <h2>\r\n                            <span style={styles}>{this.state.daysToGo}</span>D :\r\n                            <span style={styles}> {this.state.hoursToGo}</span>H :\r\n                            <span style={styles}> {this.state.minutesToGo}</span>M :\r\n                            <span style={styles}> {this.state.secondsToGo}</span>S\r\n                        </h2>\r\n                        <h3>to go</h3>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Countdown","import React from \"react\"\nimport Header from \"./component/Header\"\nimport Footer from \"./component/Footer\"\nimport Countdown from \"./component/Countdown\"\nimport \"./App.css\"\n\nfunction App() {\n    return(\n        <div>\n            <Header />\n            <Countdown />\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()"],"sourceRoot":""}